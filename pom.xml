<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.zuhr</groupId>
    <artifactId>spring-boot-example</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <name>spring-boot-example</name>

    <modules>
        <module>common</module>
        <module>server</module>
        <module>model-test</module>
        <module>api-gateway</module>
        <module>basis-service</module>
        <module>wxapp-microservice</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring.boot.version>1.5.10.RELEASE</spring.boot.version>
        <!--阿里数据库连接池-->
        <druid-version>1.1.9</druid-version>
        <!--mybatis-->
        <mybatis-version>1.3.0</mybatis-version>
        <!--mybatis-generator自动生成代码插件-->
        <mybatis-generator-version>1.3.2</mybatis-generator-version>
        <email-version>1.5.1.RELEASE</email-version>
        <!--fashjson-->
        <fastjson-version>1.2.35</fastjson-version>
        <!--谷歌工具类-->
        <guava-version>24.1-jre</guava-version>
        <!--jedis-->
        <jedis-version>2.9.0</jedis-version>
        <!--用来支持分布式锁等-->
        <redisson-version>3.6.4</redisson-version>
        <!--集成Lombok,让代码更简洁-->
        <lombok-version>1.16.18</lombok-version>
        <!--flyway-数据库版本控制-->
        <flyway-version>5.0.3</flyway-version>
        <!--spring-boot-admin-server-->
        <admin-version>1.5.0</admin-version>

    </properties>

    <!--
           spring boot 父节点依赖,
           引入这个之后相关的引入就不需要添加version配置，
           spring boot会自动选择最合适的版本进行添加。
         -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--依赖管理-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!--依赖-->
    <dependencies>


        <!--spring-boot web支持-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--支持常规的测试依赖，包括JUnit、Hamcrest、Mockito以及spring-test模块。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--使用junit进行多线程并发测试，需引入第三方仓库获取此jar包-->
        <dependency>
            <groupId>net.sourceforge.groboutils</groupId>
            <artifactId>groboutils-core</artifactId>
            <version>5</version>
        </dependency>
        <!--切面-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok-version}</version>
            <scope>provided</scope>
        </dependency>


        <!-- 支持 @ConfigurationProperties 注解 -->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <!--<version>${springboot.version}</version>-->
        </dependency>


    </dependencies>

    <!--指定使用maven打包-->
    <build>
        <plugins>
            <!--<plugin>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
            <!--</plugin>-->
            <!--指明jdk版本-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <!--默认关掉单元测试 -->
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--使用阿里云maven镜像仓库-->
    <repositories>
        <repository>
            <id>nexus-aliyun</id>
            <name>nexus aliyun</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
        <!--另一个仓库，主要用来使用groboutils-->
        <repository>
            <id>nexus-sonatype</id>
            <name>nexus sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/opensymphony-releases</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-plugin</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>